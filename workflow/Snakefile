
samples = ["SRR10379721", "SRR10379722", "SRR10379723", "SRR10379724", "SRR10379725", "SRR10379726"] #références des accesions 

samples_dev = [ "SRR10379725", "SRR10379726"] #références des accesions 


rule all:
    input:
        expand("{sample}.bam" , sample=samples_dev)


# Téléchargement 

rule download_ref_genome:
    output:
        "ref_genome.fna"  # fichier au format FASTA (.fa)
    threads: 1 #la règle utilisera un coeur (car il y a un unique fichier)
    shell:
        "wget -O - https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/013/425/GCF_000013425.1_ASM1342v1/GCF_000013425.1_ASM1342v1_genomic.fna.gz | gzip -d > {output}"

rule download_annotated_ref_genome:
    output:
        "ref_genome.gff"  #annotation au format .gff
    threads: 1 #la règle utilisera un coeur (car il y a un unique fichier)
    shell:
        "wget -O - https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/013/425/GCF_000013425.1_ASM1342v1/GCF_000013425.1_ASM1342v1_genomic.gff.gz | gzip -d > {output}"

rule download_rnaseq:
    output:
        temp("{sample}/{sample}.sra") #permet l'utilisation temporaire puis de supprimer afin de ne pas garder des fichiers lourds et inutiles
    singularity : "img/sra_toolkit.sif"
    resources:
        shell_exec="sh"
    shell:
        "prefetch {wildcards.sample}" 


rule index_genome:
    input:
        "ref_genome.fna"
    output:
        expand("ref_genome.{index_elements}.ebwt",index_elements = ["1","2","3","4","rev.1","rev.2"])
    threads: 1
    singularity : "img/bowtie.sif"
    resources:
        shell_exec="sh"
    shell:
        "bowtie-build {input} ref_genome"


rule extract_rnaseq: #extract from sra --> fastq : ressource intensive, file size can increase a lot !
    input :
        "{sample}/{sample}.sra"
    output:
        "{sample}.fastq" 
    singularity : "img/sra_toolkit.sif"
    resources:
        shell_exec="sh"
    shell:
        "fasterq-dump --threads=1 {input}" 

rule trim:
    input:
        "{sample}.fastq"
    output:
        "trimmed_{sample}.fastq.gz" 
    resources:
        shell_exec="sh"
    singularity : "img/cutadapt.sif"
    shell:
        "cutadapt -q 25 -o {output} {input}" # gzip compressed output
        
rule map:
    input:
        sequence = "trimmed_{sample}.fastq.gz",
        index = expand("ref_genome.{index_elements}.ebwt",index_elements = ["1","2","3","4","rev.1","rev.2"])
    output:
        "{sample}.bam" 
    singularity : "img/samtools+bowtie.sif"
    threads : 1
    shell:
        "gunzip -c {input.sequence} |bowtie -p {threads} -S  ref_genome -  |  samtools sort -@ {threads} - > {output} "